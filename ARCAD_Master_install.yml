
---
# Description:
  # This playbook shows how to install an ARCAD Master using Ansible and ibm collection
  # ibm.power_ibmi (ansible for i)
  
# Restriction: 
  # You must have *ALLOBJ and *SECADM special authorities to use this playbook (see inventory to define the profile to use 
  # that should be configured with ssh

# Parameters:
  # noparameters --  no parameters for the moment

# Example:
  # ansible-playbook -i hosts ARCAD_Master_install.yml -e "target_ibmi=your_ibmi"
  

- hosts: '{{ target_ibmi }}'
  gather_facts: no
  collections:
   - ibm.power_ibmi
  vars:
    destpath: "/tmp/MSTARC 13.02.02 V7R1M0 Master ENG FRA.zip"
    tmpdir: "/tmp/"
    zipdir: "/tmp/MSTARC 13.02.02 V7R1M0 Master ENG FRA"
    masterjob: "MST_130202"
    masterdta: "MSTARC 13.02.02 V7R1M0 Master ENG FRA.dta"
    instance: "AD"
  
  tasks:

  - name: Copy file from Ansible Master to target IBM i 
    copy:
      src: "{{destpath}}"
      dest: "{{destpath}}"
    
  - name: check if savf exists
    ibmi_cl_command:
      cmd: CHKOBJ OBJ(QGPL/ARCINST) OBJTYPE(*FILE)   
      joblog: true
    register: savf
    ignore_errors: true

  - name: Setting host facts
    set_fact:
      savfexist: "{{ true if savf.rc == 0 else false }}"

  - name: create the savefile QGPL/ARCINST
    ibmi_cl_command:
      cmd: CRTSAVF FILE(QGPL/ARCINST) 
      joblog: true
    when: savfexist == false
    
  - name: clear the savefile QGPL/ARCINST if exists
    ibmi_cl_command:
      cmd: CLRSAVF FILE(QGPL/ARCINST) 
      joblog: true
    when: savfexist == true

  - name: unzip the Master
    ibmi_cl_command:
      cmd: CPYFRMARCF FROMARCF('{{destpath}}') TODIR('{{tmpdir}}') RPLDTA(*YES)    
      joblog: true

  - name: cpyfromstmf to copy the arcinst.dta file to /qgpl.arcinst
    ibmi_cl_command:
      cmd: CPYFRMSTMF FROMSTMF('{{zipdir}}/arcinst.dta') TOMBR('/QSYS.LIB/QGPL.LIB/ARCINST.FILE') MBROPT(*REPLACE)    
      joblog: true

  - name: check if ARCINST library already exists
    ibmi_cl_command:
      cmd: CHKOBJ OBJ(*LIBL/ARCINST) OBJTYPE(*LIB)   
      joblog: true
    register: arcinst
    ignore_errors: true

  - name: Setting host facts
    set_fact:
      arcinstexist: "{{ true if arcinst.rc == 0 else false }}"    

  - name: clearing ARCINST library if it exists
    ibmi_cl_command:
      cmd: CLRLIB LIB(ARCINST) 
      joblog: true
    when: arcinstexist == true

  - name: restore ARCINST library
    ibmi_cl_command:
      cmd: RSTLIB SAVLIB(ARCINST) DEV(*SAVF) SAVF(QGPL/ARCINST) MBROPT(*ALL) STRJRN(*NO) ALWOBJDIF(*ALL)       
      joblog: true

  - name: cpyfrmstmf to master_name 
    ibmi_cl_command:
      cmd: CPYFRMSTMF FROMSTMF('{{zipdir}}/{{masterdta}}') TOMBR('/QSYS.LIB/ARCINST.LIB/{{masterjob}}.FILE') MBROPT(*REPLACE)        
      joblog: true

  - name: "Master installation ASP number 1 = *SYSBAS DEMO(*YES) will install the application DEMO SAMCO LANG1(ENG) install only one language library ARC{{instance}}_ENG eg : ARCAD_ENG if instance='AD'"
    ibmi_submit_job:
      cmd: ARCINST/ARCINST IFSOBJ('{{zipdir}}/{{masterdta}}') PARMS('LANG1(ENG) INSTANCE({{instance}}) ASP(1) DEMO(*YES) MSGLANG(0) SAVF(ARCINST/{{masterjob}})')
      parameters: 'JOB(ARCADMST)'
      check_interval: '1m'
      time_out: '10m'
      status: ['*OUTQ', '*COMPLETE']
    register: sbmjob
      
  - name: Check whether the job completed normally
    ibmi_job:
       name: '{{sbmjob.job_submitted}}'
       joblog: true
    register: sbmjob_info
    when: 'sbmjob.rc == 0' 
  
  - assert:
      that:
        - "sbmjob_info.job_info[0].COMPLETION_STATUS == 'NORMAL'"
      success_msg: 'The job ended normally'
      fail_msg: 'The job ended abnormally, please refer to the job log on IBM i for the details'
    when: 'sbmjob.rc == 0'    

